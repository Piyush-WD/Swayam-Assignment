//Two Sum
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int>ans;
        for(int i=0;i<nums.size()-1;i++){
            for(int j=i+1;j<nums.size();j++){
                if(nums[i]+nums[j]==target){
                    ans.push_back(i);
                    ans.push_back(j);
                }
            }
        }
        return ans;
    }
};

//Best time to buy and sell stocks
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int min = INT_MAX;
        int maxp = 0;
        for(int i=0;i<prices.size();i++){
            if(prices[i]<min){
                min=prices[i];
            }
            maxp = max(maxp, prices[i]-min);
        }
        return maxp;
    }
};


//Sort 0, 1 and 2(Dutch flag algorithm)
class Solution {
public:
    void sortColors(vector<int>& nums) {
        int n = nums.size();
        for (int i=0;i<n-1;i++){
            bool swapped = false;

            for (int j=0;j<n-i-1;j++){
                if(nums[j]>nums[j+1]){
                    swap(nums[j],nums[j+1]);
                    swapped = true;
                }
            }
            if (!swapped){
                break;
            }
        }
    }
};
